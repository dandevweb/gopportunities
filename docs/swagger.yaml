definitions:
  handler.CreateOpeningRequest:
    properties:
      company:
        type: string
      link:
        type: string
      location:
        type: string
      remote:
        type: boolean
      role:
        type: string
      salary:
        type: integer
    type: object
  handler.CreateOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/model.OpeningResponse'
      message:
        type: string
    type: object
  handler.DeleteOpeningResponse:
    properties:
      message:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      errorCode:
        type: integer
      message:
        type: string
    type: object
  handler.ListOpeningsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.OpeningResponse'
        type: array
      message:
        type: string
    type: object
  handler.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.LoginResponse:
    properties:
      token:
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handler.RegisterResponse:
    properties:
      data:
        $ref: '#/definitions/model.UserResponse'
      message:
        type: string
    type: object
  handler.ShowOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/model.OpeningResponse'
      message:
        type: string
    type: object
  handler.UpdateOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/model.OpeningResponse'
      message:
        type: string
    type: object
  model.OpeningResponse:
    properties:
      company:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      link:
        type: string
      location:
        type: string
      remote:
        type: boolean
      role:
        type: string
      salary:
        type: integer
      updated_at:
        type: string
    type: object
  model.UserResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - auth
  /openings:
    get:
      consumes:
      - application/json
      description: List all openings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ListOpeningsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List openings
      tags:
      - openings
    post:
      consumes:
      - application/json
      description: Create an opening
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateOpeningRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CreateOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create  opening
      tags:
      - openings
  /openings/:id:
    get:
      consumes:
      - application/json
      description: Show an opening
      parameters:
      - description: Opening ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ShowOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Show opening
      tags:
      - openings
  /openings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an opening
      parameters:
      - description: Opening ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/handler.DeleteOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete  opening
      tags:
      - openings
    put:
      consumes:
      - application/json
      description: Update an opening
      parameters:
      - description: Opening ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateOpeningRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UpdateOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update opening
      tags:
      - openings
  /register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register
      tags:
      - auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
